[[appdx_bitcore]]
[appendix]

== Bitcore


((("Bitcore", id="bitcore16")))Bitcore je skup alata koji nudi BitPay. Njegov cilj je da obezbedi bitkoin programerima alate za razvoj koji se lako koriste. Skoro ceo Bitcore kod napisan je u JavaScript-u. Postoje neki moduli napisani posebno za NodeJS. Konačno, modul "čvora" (node) u Bitcore-u uključuje C++ kod Bitcoin Core-a. Za više informacija pogledajte https://bitcore.io.

=== Lista Bitcore karakteristika

* Pun čvor bitkoina (bitcore-node)
* Blok explorer (insight)
* Uslužni programi za blokove, transakcije i novčanike (bitcore-lib)
* Komunicira direktno sa bitkoin P2P mrežom (bitcore-p2p)
* Generisanje mnemonika semenom entropije (bitcore-mnemonic)
* Protokol plaćanja (bitcore-payment-protocol)
* Potvrđivanje poruke i potpisivanje (bitcore-message)
* Integrisana šema šifrovanja sa eliptičkom krivom (bitcore-ecies)
* Usluga novčanika (bitcore-wallet-service)
* Klijent novčanika (bitcore-wallet-client)
* Integrisanje usluga direktno sa Bitcoin Core-om (bitcore-node)

=== Primeri biblioteke bitcore

==== Preduslovi

* NodeJS >= 4.x

Ako koristite NodeJS i čvor REPL:

[source,bash]
----
$ npm install -g bitcore-lib bitcore-p2p
----

==== Primeri novčanika pomoću bitcore-lib-a

Kreiranje nove bitkoin adrese sa povezanim privatnim ključem:

----
> bitcore = require('bitcore-lib')
> privateKey = new bitcore.PrivateKey()
> address = privateKey.toAddress().toString()
----

Stvaranje hijerarhijskog determinisanog privatnog ključa i adrese:

----
> hdPrivateKey = bitcore.HDPrivateKey()
> hdPublicKey = bitcore.HDPublicKey(hdPrivateKey)
> hdAddress = new bitcore.Address(hdPublicKey.publicKey).toString()
----

Kreiranje i potpisivanje transakcije jednog UTXO-a:

----
> utxo = {
  txId: transaction id containing an unspent output,
  outputIndex: output index e.g. 0,
  address: addressOfUtxo,
  script: bitcore.Script.buildPublicKeyHashOut(addressOfUtxo).toString(),
  satoshis: amount sent to the address
}
> fee = 3000 //podešena na odgovarajući način za uslove na mreži
> tx = new bitcore.Transaction()
        .from(utxo)
        .to(address, 35000)
        .fee(fee)
        .enableRBF()
        .sign(privateKeyOfUtxo)
----

Zamenite poslednju transakciju u mempool-u (replace-by-fee):

----
> rbfTx = new Transaction()
           .from(utxo)
           .to(address, 35000)
           .fee(fee*2)
           .enableRBF()
           .sign(privateKeyOfUtxo);
> tx.serialize();
> rbfTx.serialize();
----

Emitovanje transakcije na bitkoin mreži
(napomena: emitujte samo validne transakcije; pogledajte https://bitnodes.21.co/nodes[] za peer hostove):

1. Kopirajte donji kod u fajl koji se zove _broadcast.js_.
2. Varijable +tx+ i +rbfTx+ su izlaz od +tx.serialize()+ i +rbfTx.serialize()+.
3. Da bi zamenio naknadu peer mora da podrži bitcoind opciju +mempoolreplace+ i stavi je na +1+.
4. Pokrenite čvor fajla _broadcast.js_((("", startref="bitcore16"))):

----
var p2p = require('bitcore-p2p');
var bitcore = require('bitcore-lib');
var tx = new bitcore.Transaction('output from serialize function');
var rbfTx = new bitcore.Transaction('output from serialize function');
var host = 'ip address'; //use valid peer listening on tcp 8333
var peer = new p2p.Peer({host: host});
var messages = new p2p.Messages();
peer.on('ready', function() {
  var txs = [messages.Transaction(tx), messages.Transaction(rbfTx)];
  var index = 0;
  var interval = setInterval(function() {
    peer.sendMessage(txs[index++]);
    console.log('tx: ' + index + ' sent');
    if (index === txs.length) {
      clearInterval(interval);
      console.log('disconnecting from peer: ' + host);
      peer.disconnect();
    }
  }, 2000);
});
peer.connect();
----